{"version":3,"sources":["logo.svg","controls.jsx","main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Controls","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleTab","bind","assertThisInitialized","section","toggleDisplay","_this2","react_default","a","createElement","id","onClick","className","src","React","Component","Main","state","pageUnlocked","displayTab","askForPassword","expandSection","window","localStorage","getItem","setState","prompt","setItem","_this$state","react_responsive_default","minDeviceWidth","maxDeviceWidth","controls_Controls","lib_default","visible","width","height","effect","onClickAway","closeModal","style","backgroundColor","type","frameBorder","App","main_Main","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.015a99b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\n\nexport default class Controls extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.toggleTab = this.toggleTab.bind(this);\n    }\n\n    toggleTab(section) {\n      const { toggleDisplay } = this.props;\n      toggleDisplay(section);\n    }\n\n    render() {\n      return (\n        <div id=\"controls\">\n          <div onClick={() => this.toggleTab('schedule')}>\n            <img className=\"click-animation\" id=\"trips\" src=\"https://res.cloudinary.com/ac31624/image/upload/v1561969187/jon_bache/trips.png\" />\n          </div>\n          <div id='midsection'>\n            <span onClick={() => this.toggleTab('photos')}>\n              <img className=\"click-animation\" id=\"photos\" src=\"https://res.cloudinary.com/ac31624/image/upload/v1561969188/jon_bache/test.png\" />\n            </span>\n            <span id=\"equals\">\n              =\n            </span>\n            <span onClick={() => this.toggleTab('other')}>\n              <img className=\"click-animation\" id=\"photos\" src=\"https://res.cloudinary.com/ac31624/image/upload/v1561969188/jon_bache/test.png\" />\n            </span>\n          </div>\n\n          <div id='midsection'>\n            <span onClick={() => this.toggleTab('video')}>\n              <img className=\"click-animation\" id=\"photos\" src=\"https://res.cloudinary.com/ac31624/image/upload/v1561969188/jon_bache/test.png\" />\n            </span>\n            <span id=\"equals-hidden\">\n              =\n            </span>\n            <span onClick={() => this.toggleTab('other')}>\n              <img id=\"photos-hidden\" src=\"https://res.cloudinary.com/ac31624/image/upload/v1561969188/jon_bache/test.png\" />\n            </span>\n          </div>\n        </div>\n      );\n    }\n  }","import React, { Component } from 'react';\nimport Controls from './controls';\nimport MediaQuery from 'react-responsive';\nimport Modal from 'react-awesome-modal';\n\nexport default class Main extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        pageUnlocked: false,\n        displayTab: null\n      };\n\n      this.askForPassword = this.askForPassword.bind(this);\n      this.expandSection = this.expandSection.bind(this);\n    }\n\n    componentWillMount() {\n      if (window.localStorage.getItem('pageUnlocked') === 'yes') {\n        this.setState({\n          pageUnlocked: true\n        })\n      } else {\n        this.askForPassword();\n      }\n    }\n\n    askForPassword() {\n      const answer = prompt(\"What's the passcode?\", \"idk\");\n\n      if (answer === '123') {\n        this.setState({\n          pageUnlocked: true\n        })\n        window.localStorage.setItem('pageUnlocked', 'yes');\n      } else {\n        this.askForPassword();\n      }\n    }\n\n    expandSection(section) {\n      this.setState({\n        displayTab: section\n      })\n    }\n\n    closeModal() {\n      this.setState({\n        displayTab: null\n      })\n    }\n  \n    render() {\n      const { pageUnlocked, displayTab } = this.state;\n\n      return (\n        <div>\n          <div id=\"header\"><img id=\"header-image\" src=\"https://res.cloudinary.com/ac31624/image/upload/c_limit,h_567,w_1572/v1562033102/jon_bache/vegas_sign.png\" /></div>\n          <MediaQuery minDeviceWidth={1224}>\n            desktop mode\n          </MediaQuery>\n          <MediaQuery maxDeviceWidth={1224}>\n            {pageUnlocked && \n              <div id='mainpage'>\n                <Controls toggleDisplay={this.expandSection} />\n\n                <Modal \n                  visible={this.state.displayTab && this.state.displayTab === 'schedule'}\n                  width=\"100%\"\n                  height=\"80%\"\n                  effect=\"fadeInUp\"\n                  onClickAway={() => this.closeModal()}\n                >\n                  SCHEDULE HERE\n                </Modal>\n\n                <Modal \n                  visible={this.state.displayTab && this.state.displayTab === 'photos'}\n                  width=\"100%\"\n                  height=\"80%\"\n                  effect=\"fadeInUp\"\n                  onClickAway={() => this.closeModal()}\n                >\n                  PHOTOS HERE\n                </Modal>\n\n                <Modal \n                  visible={this.state.displayTab && this.state.displayTab === 'other'}\n                  width=\"100%\"\n                  height=\"80%\"\n                  effect=\"fadeInUp\"\n                  onClickAway={() => this.closeModal()}\n                >\n                  OTHER HERE\n                </Modal>\n\n                <Modal \n                  visible={this.state.displayTab && this.state.displayTab === 'video'}\n                  width=\"100%\"\n                  height=\"80%\"\n                  effect=\"fadeInUp\"\n                  onClickAway={() => this.closeModal()}\n                >\n                  {this.state.displayTab && this.state.displayTab === 'video' &&\n                    <iframe style={{backgroundColor: 'black'}} id=\"ytplayer\" type=\"text/html\" width=\"100%\" height=\"100%\"\n                      src=\"https://www.youtube.com/embed/dfnCAmr569k?autoplay=1&origin=http://example.com\"\n                      frameBorder=\"0\">\n                    </iframe>\n                  }\n                </Modal>\n              </div>\n            }\n          </MediaQuery>\n        </div>\n      );\n    }\n  }","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Main from './main';\n\nfunction App() {\n  return (\n    <div >\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}